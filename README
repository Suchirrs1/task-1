The first step I took in doing task 1 was opening and reading the binary files that were given to us. I read the data and printed it out to the command line to see what it looks like. I researched how to display the data in the binary file properly and came to implementation seen in my task.c file. After printing all the data in the makefile I tried to understand where each part of the header in the first packet was and would use that as an example for the other packets. In seeing this I was able to separate the pakcet id, number of packets, and the number of bytes in the packet from the rest of the data in the packet. The next step is to convert the hexadecimal value of the number of bytes to a decimal value that can be used in a loop. Once I am able to do this I will successfully be able to separate the first packet from the rest and will be able to replicate this for the rest of the packets. I will then make a method to check the number of bytes in a packet and use that to find the crc of that packet. Once I do this checking if the packet is corrupted or not will only be a matter of an if statement. After finishing this I need to print all the needed data into text files depending on if the packet is corrupted or not. The roadblock I am facing right now is being able to convert the given hexadecimal number into a usable decimal number. I couldnt get the hex to decimal conversion so I just separated the first packet in the file by converting the 5th and 6th bytes in the packet which should be the number of bytes in the packet acccording to the task guidelines. I am now reading the packet into another file to be decoded. I am going to test the caesar cipher program with this first packet and try to figure out the rest of the first task after completing the second. I completely understand where everything is in the packet and how I would get there, but since I can't convert the hex to decimal to be used in a loop.